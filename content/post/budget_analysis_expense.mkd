---
title: Budget analysis - Ministry-wise expense
author: Rushad Faridi 
date: 2018-03-11
slug: budge-analysis-expense
categories: []
tags: []
---

Today I am going to have a look at ministry wise expense from budget data of Ministry of Finance of Bangladesh. In the process, we will also see how to use `tabulizer` package to import data from PDF files.

We are going to download the PDF from here [here](http://http://mof.portal.gov.bd/sites/default/files/files/mof.portal.gov.bd/page/69fff6e4_953e_45d3_b96d_e89a7efa8699/St7_En.pdf "MOF") which consists of only two pages.

Now let's load the required package `tabulizer`. In your system, if you already do not have it, then you will first have to download it using `install.packages()` command. 

Let's load the package first.

```{r ll  }
library(dplyr)
library("tabulizer")
```

Now let's start the extraction process.

```{r ext  }
f <- "../RAWDATA/ministry_wise_expense.pdf"
out <- extract_tables(f)
```

Let's have a quick look at the structure of the extracted object:

```{r extob  }
str(out)
```

Therefore it's a list of three elements. Probably this corresponds to the three tables in two pages. Let's select the very first one and work on it.

```{r ft  }
tab1  <- out[[1]]
```

Let's bring the data in some manageable form.

```{r man  }
tab1.df <- as.data.frame(tab1)
tab1.sh <- tab1.df[c(1,2,4)]
names(tab1.sh) <- c("code","min.div","budget.2017.18")
tab1.sh  <- tab1.sh %>% 
		slice(c(-1,-2))
tab1.clean <- tab1.sh %>% 
		    mutate(budget.2017.18=gsub(",","",budget.2017.18),
			   bgt.18=as.numeric(budget.2017.18),
			   bgt.18=round(bgt.18/10000,0)) %>% 
                    select(-budget.2017.18)

```

Let's do the same for the table from page 2. 


```{r ft2  }
tab2  <- out[[2]]
```

Let's bring the data in some manageable form.

```{r man2  }
tab2.df <- as.data.frame(tab2)
tab2.sh <- tab2.df[c(1,2,4)]
names(tab2.sh) <- c("code","min.div","budget.2017.18")
tab2.sh  <- tab2.sh %>% 
		slice(c(-1,-2))
tab2.clean <- tab2.sh %>% 
		    mutate(budget.2017.18=gsub(",","",budget.2017.18),
			   bgt.18=as.numeric(budget.2017.18),
			   bgt.18=round(bgt.18/10000,0)) %>% 
                    select(-budget.2017.18)

```

Now let's put these two tables together:

```{r tog  }
tab.whole  <- rbind(tab1.clean, tab2.clean) %>% 
                   slice(1:62)
```




Finally the table is ready. Now let's check top 10 highest spending entity:

```{r top10  }
tab.whole %>% 
    arrange(desc(bgt.18)) %>% 
    slice(1:10)
```

Now let's have a look into to 10 lowest spending entity


```{r bottom10  }
tab.whole %>% 
    arrange(bgt.18) %>% 
    slice(1:10)
```

Let's save the data before we leave:

```{r ss  }
save(tab.whole, file="../RDATA/tab_whole_bgt_18.RData")
```


